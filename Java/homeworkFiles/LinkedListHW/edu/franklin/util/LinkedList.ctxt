#BlueJ class context
comment0.params=
comment0.target=LinkedList()
comment0.text=\r\n\ Constructs\ an\ empty\ list.\r\n
comment1.params=
comment1.target=int\ size()
comment1.text=\r\n\ Returns\ the\ number\ of\ elements\ in\ the\ list.\r\n\ @return\ the\ number\ of\ elements\ in\ the\ list.\r\n
comment2.params=index
comment2.target=ListIterator\ listIterator(int)
comment2.text=\r\n\ Returns\ a\ ListIterator\ over\ the\ elements\ in\ this\ list.\ \ The\ starting\r\n\ position\ for\ the\ list\ iterator\ will\ be\ the\ 0th\ element.\r\n\ @return\ a\ ListIterator\ over\ the\ elements\ in\ this\ list.\r\n
comment3.params=fromIndex\ toIndex
comment3.target=List\ subList(int,\ int)
comment3.text=\r\n\ Create\ a\ sublist\ of\ this\ list\ between\ the\ given\ indices.\ \ The\ sublist\r\n\ is\ not\ a\ copy\ of\ the\ elements\ of\ this\ list,\ but\ rather\ a\ restricted\r\n\ view\ on\ them.\ \ Thus,\ any\ insertions,\ deletions,\ or\ replacements\r\n\ of\ elements\ in\ the\ sublist\ will\ affect\ the\ original\ list.\r\n\ \r\n\ WARNING\!\!\!\ \ This\ implementation\ does\ not\ use\ the\ "view"\ philosophy.\r\n\ Any\ changes\ to\ the\ sublist\ will\ <b>not</b>\ be\ reflected\ in\ the\r\n\ original\ list.\r\n\ \r\n\ @param\ fromIndex\ the\ starting\ index\ (inclusive)\ of\ the\ sublist\r\n\ @param\ toIndex\ the\ ending\ index\ (exclusive)\ of\ the\ sublist\r\n\ @return\ a\ restricted\ view\ on\ this\ list\r\n\ @throws\ IndexOutOfBoundsException\ if\ either\ index\ is\ <\ 0\ or\ >\ size.\r\n
comment4.params=obj
comment4.target=void\ addFirst(java.lang.Object)
comment4.text=\r\n\ Adds\ an\ element\ to\ the\ front\ of\ the\ list.\r\n\ @param\ obj\ the\ element\ to\ add\r\n
comment5.params=obj
comment5.target=void\ addLast(java.lang.Object)
comment5.text=\r\n\ Adds\ an\ element\ to\ the\ front\ of\ the\ list.\r\n\ @param\ obj\ the\ element\ to\ add\r\n
comment6.params=
comment6.target=java.lang.Object\ getFirst()
comment6.text=\r\n\ Returns\ the\ first\ element\ of\ the\ list.\r\n\ @return\ the\ first\ element\ of\ the\ list\r\n\ @throws\ java.util.NoSuchElementException\ if\ the\ list\ is\ empty.\r\n
comment7.params=
comment7.target=java.lang.Object\ getLast()
comment7.text=\r\n\ Returns\ the\ last\ element\ of\ the\ list.\r\n\ @return\ the\ last\ element\ of\ the\ list\r\n\ @throws\ java.util.NoSuchElementException\ if\ the\ list\ is\ empty.\r\n
comment8.params=
comment8.target=java.lang.Object\ removeFirst()
comment8.text=\r\n\ Removes\ and\ returns\ the\ first\ element\ of\ the\ list.\r\n\ @return\ the\ first\ element\ of\ the\ list\r\n\ @throws\ java.util.NoSuchElementException\ if\ the\ list\ is\ empty.\r\n
comment9.params=
comment9.target=java.lang.Object\ removeLast()
comment9.text=\r\n\ Removes\ and\ returns\ the\ last\ element\ of\ the\ list.\r\n\ @return\ the\ last\ element\ of\ the\ list\r\n\ @throws\ java.util.NoSuchElementException\ if\ the\ list\ is\ empty.\r\n
numComments=10
