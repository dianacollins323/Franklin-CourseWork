#BlueJ class context
comment0.params=
comment0.target=ABCRentals()
comment0.text=\r\n\ Default\ constructor.\r\n
comment1.params=item
comment1.target=boolean\ add(Item)
comment1.text=\r\n\ Add\ an\ item\ to\ the\ inventory.\ \ The\ parameter\ item\r\n\ should\ not\ be\ something\ already\ in\ the\ inventory.\ \ As\ a\r\n\ result\ of\ adding\ an\ item,\ the\ item\ will\ be\ assigned\ an\ ID\ starting\r\n\ with\ 1\ and\ increasing\ by\ 1\ for\ each\ item\ added.\ \ IDs\r\n\ are\ not\ reused.\ \ All\ items\ are\ kept\r\n\ in\ a\ database\ internal\ to\ the\ inventory\ so\ that\ they\ may\ be\ searched\r\n\ for\ using\ a\ query.\r\n\ @param\ item\ the\ item\ to\ add.\r\n\ @return\ true\ when\ the\ item\ is\ added,\ false\ if\ the\ item\ cannot\r\n\ be\ added\ for\ any\ reason.\r\n
comment10.params=order
comment10.target=boolean\ orderInStock(Order)
comment10.text=\r\n\ checks\ if\ all\ items\ in\ order\ are\ in\ stock\r\n\ \r\n\ @param\ order\ to\ check\r\n\ @return\ true\ if\ all\ items\ in\ order\ \r\n\ are\ in\ stock,\ false\ if\ not\r\n
comment11.params=order
comment11.target=void\ handleOrder(Order)
comment11.text=\r\n\ if\ isOrderInStock\ returns\ true\ items\ are\ marked\r\n\ as\ rented\ for\ customer\ pickup,\ else\ order\ is\ saved\r\n\ \r\n\ @param\ order\ to\ be\ rented\r\n
comment12.params=order
comment12.target=boolean\ processBackOrder(Order)
comment12.text=\r\n\ Processes\ a\ back\ order.\ The\ items\ in\ the\ order\ are\ marked\ as\ rented\r\n\ only\ if\ all\ the\ items\ are\ available\ for\ rent.\ If\ the\ entire\ order\r\n\ cannot\ be\ processed,\ it\ is\ saved\ and\ processed\ when\ the\ items\ have\r\n\ been\ restocked.\r\n\r\n\ @param\ order\ The\ back\ order\ to\ process.\r\n\ @return\ true\ if\ and\ only\ if\ the\ order\ can\ be\ processed.\r\n
comment13.params=
comment13.target=java.util.LinkedList\ getBackOrders()
comment13.text=\r\n\ @return\ backOrder\ list\r\n
comment14.params=order
comment14.target=int\ sortBackOrders(Order)
comment14.text=\r\n\ Sorts\ backOrders\ list\r\n\ putting\ highest\ totalFee\ at\ beginning\r\n\ \r\n\ @param\ order\ to\ add\ to\ list\r\n\ @return\ index\ for\ place\ in\ \r\n\ backOrders\ to\ add\ order\r\n
comment15.params=
comment15.target=Order\ checkBackOrders()
comment15.text=\r\n\ Check\ backOrders\ for\ orderInStock\r\n\ \r\n\ @return\ foundOrder\ order\ to\ be\ filled\r\n\ or\ null\ if\ no\ backOrders\ can\ be\ filled\r\n
comment2.params=id
comment2.target=boolean\ remove(java.lang.String)
comment2.text=\r\n\ Remove\ an\ item.\ \ The\ id\ should\ be\ the\ id\ of\r\n\ an\ item\ in\ the\ inventory.\ \ The\ item\ with\ the\r\n\ specified\ id\ is\ located\ in\ inventory\ and\ removed.\r\n\ @param\ id\ the\ id\ of\ the\ item\ to\ remove.\r\n\ @return\ true\ if\ the\ item\ was\ found\ and\ removed,\ false\ otherwise.\r\n
comment3.params=
comment3.target=int\ getItemCount()
comment3.text=\r\n\ Return\ the\ number\ of\ items\ presently\ in\ inventory.\r\n\ @return\ the\ number\ of\ items.\r\n
comment4.params=query
comment4.target=Item[]\ findItems(Lookup)
comment4.text=\r\n\ Create\ and\ return\ an\ array\ of\ items\ that\ match\ the\ given\ query\r\n\ criteria.\ \ The\ query\ will\ identify\ which\ items\ match.\ \ The\ length\r\n\ of\ the\ returned\ array\ should\ be\ equal\ to\ the\ number\ of\ items\r\n\ that\ match,\ and\ each\ element\ in\ the\ array\ should\ be\ a\ matching\r\n\ item.\r\n\ @param\ query\ a\ query\ indicating\ which\ items\ to\ find.\r\n\ @return\ an\ array\ of\ matching\ items.\r\n
comment5.params=id\ weeks
comment5.target=Money\ rent(java.lang.String,\ int)
comment5.text=\r\n\ Rent\ an\ item\ in\ inventory.\ The\ rental\ fee\ for\ the\ item\ is\r\n\ calculated,\ and\ the\ item\ is\ marked\ as\ rented.\r\n\ @param\ id\ the\ id\ of\ the\ item\ to\ be\ rented.\r\n\ @param\ weeks\ the\ number\ of\ weeks\ the\ item\ is\ to\ be\ rented.\r\n\ @return\ the\ rental\ fee\ if\ the\ item\ was\ available\ for\ rent,\r\n\ null\ otherwise.\r\n
comment6.params=id
comment6.target=boolean\ restock(java.lang.String)
comment6.text=\r\n\ Return\ a\ rented\ item\ to\ inventory.\ The\ item\ is\ marked\ as\ not\r\n\ rented.\ Note\ that\ if\ the\ item\ isn't\ already\ rented,\ it\ cannot\r\n\ be\ restocked.\r\n\ @param\ id\ the\ id\ of\ the\ restocked\ item.\r\n\ @return\ true\ if\ the\ item\ was\ sucessfully\ returned\ to\ inventory,\r\n\ false\ otherwise.\r\n
comment7.params=fileName
comment7.target=ABCRentals\ readFromFile(java.lang.String)
comment7.text=\r\n\ Recreates\ the\ inventory\ from\ a\ persisted\ object\ file.\ \ The\ file\ should\r\n\ have\ been\ created\ by\ serialization\ of\ a\ prior\ inventory\ object.\r\n\r\n\ @param\ fileName\ the\ name\ of\ the\ file\ containing\ the\ inventory\ object\r\n\ @return\ the\ ABCRentals\ object\ read\ from\ the\ file\r\n
comment8.params=fileName
comment8.target=void\ writeToFile(java.lang.String)
comment8.text=\r\n\ Writes\ the\ current\ inventory\ to\ the\ given\ file\ name\ using\r\n\ object\ serialization.\r\n\r\n\ @param\ fileName\ the\ name\ of\ the\ file\ to\ write.\r\n
comment9.params=order
comment9.target=boolean\ processOrder(Order)
comment9.text=\r\n\ Processes\ a\ rental\ order.\ The\ items\ in\ the\ order\ are\ marked\ as\ rented\r\n\ only\ if\ all\ the\ items\ are\ available\ for\ rent.\ If\ the\ entire\ order\r\n\ cannot\ be\ processed,\ it\ is\ saved\ and\ processed\ when\ the\ items\ have\r\n\ been\ restocked.\r\n\r\n\ @param\ order\ The\ order\ to\ process.\r\n\ @return\ true\ if\ and\ only\ if\ the\ order\ can\ be\ processed.\r\n
numComments=16
