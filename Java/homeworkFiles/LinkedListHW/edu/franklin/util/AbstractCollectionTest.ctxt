#BlueJ class context
comment0.target=class\ AbstractCollectionTest
comment0.text=\nTests\ for\ functionality\ defined\ in\ AbstractCollection.\ \ This\ class\ is\nitself\ abstract,\ as\ it\ relies\ on\ a\ subclass\ to\ define\ the\ method\n<tt>getCollection</tt>\ that\ will\ return\ a\ concrete\ implementation.\n\n@author\ Todd\ A.\ Whittaker\n@version\ 2005-09\n\n
comment1.params=
comment1.target=void\ testContains()
comment1.text=\nTests\ the\ contains\ method.\n\n
comment10.params=
comment10.target=void\ testEqualsHard()
comment10.text=\nTests\ equals\ on\ two\ collections,\ each\ of\ which\ contain\ each\ other\nmultiple\ times.\n\n
comment11.params=
comment11.target=void\ testToStringMedium()
comment11.text=\nTests\ toString\ on\ a\ collection\ that\ contains\ another\ collection.\n\n
comment12.params=
comment12.target=void\ testIteratorRemoveSimple()
comment12.text=\nTests\ removing\ the\ first\ element\ from\ a\ collection\ using\ the\ iterator.\n\n
comment13.params=
comment13.target=void\ tearDown()
comment13.text=\nTears\ down\ the\ test\ fixture.\n\nCalled\ after\ every\ test\ case\ method.\n\n
comment14.params=generator
comment14.target=<E>\ Collection<E>\ getCollection(DataGenerator<E>)
comment14.text=\nThis\ method\ should\ be\ overridden\ in\ derived\ classes\ such\ that\ it\nwill\ return\ a\ concrete\ implementation\ of\ Collection\ based\ on\ the\ndata\ provided\ in\ the\ generator.\n@param\ <E>\ the\ type\ of\ data\ held\ in\ the\ collection\n@param\ generator\ the\ generator\ which\ produces\ the\ data\n@return\ a\ concrete\ collection\ of\ the\ right\ type\ containing\nthe\ data\ from\ the\ generator\n\n
comment15.params=arr
comment15.target=<E>\ Collection<E>\ getCollection(E[])
comment15.text=\nA\ convenience\ method\ that\ will\ build\ a\ collection\ from\ the\ndata\ given\ in\ an\ array.\n@param\ <E>\ the\ type\ of\ data\ held\ in\ the\ collection\n@param\ arr\ the\ array\ from\ which\ to\ build\ the\ collection\n@return\ a\ collection\ holding\ the\ data\n\n
comment16.params=
comment16.target=void\ testHashCodeHard()
comment16.text=\nTests\ hashCode\ on\ two\ collections,\ each\ of\ which\ contain\ each\ other\nmultiple\ times.\n\n
comment17.params=
comment17.target=void\ testRemove()
comment17.text=\nTests\ the\ remove\ method.\n\n
comment18.params=
comment18.target=void\ testEqualsEasy()
comment18.text=\nTests\ equals\ on\ a\ simple\ linear\ collection.\n\n
comment19.params=
comment19.target=void\ testCreating()
comment19.text=\nTest\ creating\ an\ empty\ collection.\n\n
comment2.params=
comment2.target=void\ testIteratorRemoveWithoutNext()
comment2.text=\nTests\ calling\ the\ remove\ method\ of\ the\ iterator\ without\ a\ prior\ncall\ to\ the\ next\ method.\n\n
comment20.target=emptyGenerator
comment20.text=Convenience\ generator\ for\ empty\ collections.\ \n
comment21.params=
comment21.target=AbstractCollectionTest()
comment21.text=\nDefault\ constructor\ for\ test\ class\ CollectionsTests.\n\n
comment22.target=objectType
comment22.text=Used\ to\ specify\ type\ information\ to\ generators.\ \n
comment23.params=
comment23.target=void\ testHashCodeEasy()
comment23.text=\nTests\ hashCode\ on\ a\ simple\ linear\ collection.\n\n
comment24.params=
comment24.target=void\ testContainsAll()
comment24.text=\nTests\ the\ containsAll\ method.\n\n
comment25.params=
comment25.target=void\ setUp()
comment25.text=\nSets\ up\ the\ test\ fixture.\n\nCalled\ before\ every\ test\ case\ method.\n\n
comment26.params=
comment26.target=void\ testToStringHard()
comment26.text=\nTests\ toString\ on\ two\ collections,\ each\ of\ which\ contain\ each\ other\nmultiple\ times.\n\n
comment27.params=
comment27.target=void\ testRemoveAll()
comment27.text=\nTests\ the\ removeAll\ method.\n\n
comment28.params=
comment28.target=void\ testHashCodeMedium()
comment28.text=\nTests\ hashCode\ on\ a\ collection\ that\ contains\ another\ collection.\n\n
comment29.params=
comment29.target=void\ testAddAll()
comment29.text=\nTests\ the\ addAll\ method.\n\n
comment3.target=integerType
comment3.text=Used\ to\ specify\ type\ information\ to\ generators.\ \n
comment30.params=
comment30.target=void\ testRetainAll()
comment30.text=\nTests\ the\ retainAll\ method.\n\n
comment31.target=sequenceGenerator
comment31.text=Convenience\ generator\ for\ a\ sequence\ of\ integers.\ \n
comment32.params=
comment32.target=void\ testIteration()
comment32.text=\nTest\ iterating\ through\ a\ collection,\ verifying\ data.\ \ Going\ beyond\nthe\ end\ of\ the\ collection\ should\ trigger\ a\ NoSuchElementException.\n\n
comment33.params=
comment33.target=void\ testAddingNulls()
comment33.text=\nTest\ adding\ null\ into\ a\ collection.\n\n
comment34.params=
comment34.target=void\ testToStringEasy()
comment34.text=\nTests\ toString\ on\ a\ simple\ linear\ collection.\n\n
comment35.params=
comment35.target=void\ testIteratorRemoveComplex()
comment35.text=\nTests\ removing\ every\ other\ element\ from\ the\ collection\ using\ the\niterator.\n\n
comment36.params=
comment36.target=void\ testClear()
comment36.text=\nTests\ the\ clear\ method.\n\n
comment37.params=
comment37.target=void\ testEqualsMedium()
comment37.text=\nTests\ equals\ on\ a\ collection\ that\ contains\ another\ collection.\n\n
comment38.params=
comment38.target=void\ testIsEmpty()
comment38.text=\nTests\ the\ isEmpty\ method.\n\n
comment4.params=
comment4.target=void\ testAddingSimple()
comment4.text=\nTest\ creating\ an\ empty\ collection,\ and\ adding\ a\ few\ elements\ to\ it.\n\n
comment5.params=
comment5.target=void\ testToArray()
comment5.text=\nTests\ the\ toArray\ method.\n\n
comment6.params=
comment6.target=void\ testIteratorRemovingEverything()
comment6.text=\nTests\ removing\ everything\ from\ the\ collection\ using\ the\ iterator.\n\n
comment7.params=
comment7.target=void\ testToArrayT2()
comment7.text=\nTests\ the\ toArray\ method\ where\ the\ parameter\ is\ not\ large\ enough.\n\n
comment8.target=SEQUENCE_SIZE
comment8.text=The\ default\ size\ of\ collections\ generated\ by\ sequenceGenerator.\ \n
comment9.params=
comment9.target=void\ testToArrayT1()
comment9.text=\nTests\ the\ toArray\ method\ where\ the\ parameter\ is\ large\ enough.\n\n
numComments=39
