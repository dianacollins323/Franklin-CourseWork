#BlueJ class context
comment0.target=class\ ArrayCollection
comment0.text=\nA\ concrete\ implementation\ of\ Collection\ that\ is\ based\ on\ arrays.\nSince\ we\ inherit\ from\ AbstractCollection,\ there\ are\ only\ a\ few\ methods\nto\ implement\ such\ as\ <tt>add</tt>,\ <tt>iterator</tt>,\ and\ <tt>size</tt>\n@param\ <E>\ the\ type\ of\ data\ to\ hold\ in\ the\ collection\n\n@author\ Todd\ A.\ Whittaker\n@version\ 2005-09\n\n
comment1.params=
comment1.target=void\ grow()
comment1.text=\nExpands\ the\ array\ to\ 50%\ larger\ plus\ 1.\n\n
comment10.target=nextCalled
comment11.params=
comment11.target=ArrayCollectionIterator()
comment11.text=\nConstructs\ an\ iterator\ starting\ at\ element\ 0.\n\n
comment12.params=
comment12.target=E\ next()
comment12.text=\nReturns\ the\ next\ element\ from\ the\ iteration.\n@return\ the\ next\ data\ element\n@throw\ NoSuchElemenetException\ if\ there\ is\ no\ more\ data\n\n
comment13.target=cursor
comment14.params=obj
comment14.target=boolean\ add(E)
comment14.text=\nInserts\ an\ element\ into\ a\ collection.\ \ Returns\ true\ if\ the\ collection\nis\ changed\ as\ a\ result\ of\ the\ operation,\ and\ false\ otherwise.\n@param\ obj\ the\ object\ to\ add\ into\ the\ collection\n@return\ true\ if\ the\ collection\ is\ altered\n\n
comment15.params=
comment15.target=int\ size()
comment15.text=\nReturns\ the\ number\ of\ elements\ in\ the\ collection.\n@return\ the\ number\ of\ elements\ in\ the\ collection.\n\n
comment2.params=
comment2.target=ArrayCollection()
comment2.text=\nConstructs\ an\ empty\ collection\ with\ an\ initial\ capacity\ of\ 10.\n\n
comment3.params=capacity
comment3.target=ArrayCollection(int)
comment3.text=\nConstructs\ an\ empty\ collection\ with\ the\ specified\ initial\ncapacity.\n@param\ capacity\ the\ number\ of\ array\ elements\ to\ allocate\ initially\n@throws\ IllegalArgumentException\ if\ the\ specified\ initial\ncapacity\ is\ negative\n\n
comment4.target=data
comment5.target=next
comment6.params=
comment6.target=Iterator<E>\ iterator()
comment6.text=\nGenerate\ an\ iterator\ object.\n@return\ an\ iterator\ object.\n\n
comment7.params=
comment7.target=void\ clear()
comment7.text=\nRemoves\ all\ elements\ from\ the\ collection.\ \ The\ collection\ will\nbe\ empty\ after\ calling\ this\ method.\n\n
comment8.params=
comment8.target=void\ remove()
comment8.text=\nRemoves\ the\ previously\ returned\ element\ from\ the\ iteration.\n@throws\ IllegalStateException\ when\ next\ is\ not\ called\ immediately\nbefore\ remove.\n\n
comment9.params=
comment9.target=boolean\ hasNext()
comment9.text=\nReturns\ true\ when\ the\ iterator\ has\ more\ data\ to\ return.\n@return\ true\ if\ the\ iterator\ has\ more\ data\n\n
numComments=16
