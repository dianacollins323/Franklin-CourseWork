#BlueJ class context
comment0.params=
comment0.target=AbstractListTest()
comment0.text=\r\n\ Default\ constructor\ for\ test\ class\ AbstractListTest.\r\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment10.params=
comment10.target=void\ testIteratorHasPrevious()
comment10.text=\r\n\ Test\ the\ iterator\ hasPrevious\ method.\r\n
comment11.params=
comment11.target=void\ testIteratorPrevious()
comment11.text=\r\n\ Test\ the\ iterator\ previous\ method\ for\ backward\ iteration.\r\n
comment12.params=
comment12.target=void\ testLastIndexOf()
comment12.text=\r\n\ Test\ the\ lastIndexOf\ method\ (searching\ backward).\r\n
comment13.params=
comment13.target=void\ testListGetAtIndex()
comment13.text=\r\n\ Test\ the\ get\ method\ to\ extract\ elements\ at\ a\ specified\ index.\r\n
comment14.params=
comment14.target=void\ testAddAtIndex()
comment14.text=\r\n\ Test\ adding\ elements\ at\ a\ specified\ index.\r\n
comment15.params=
comment15.target=void\ testAddAllAtIndex()
comment15.text=\r\n\ Test\ adding\ the\ contents\ of\ an\ entire\ collection\ at\ a\ specified\ index.\r\n
comment16.params=
comment16.target=void\ testRemoveAtIndex()
comment16.text=\r\n\ Test\ removing\ a\ single\ element\ at\ a\ specified\ index.\r\n
comment17.params=
comment17.target=void\ testListSetAtIndex()
comment17.text=\r\n\ Test\ replacing\ an\ element\ at\ a\ specified\ index.\r\n
comment18.params=
comment18.target=void\ testForCoMods1()
comment18.text=\r\n\ Test\ co-modification\:\ next\ after\ remove.\r\n
comment19.params=
comment19.target=void\ testForCoMods2()
comment19.text=\r\n\ Test\ co-modification\:\ previous\ after\ remove.\r\n
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testForCoMods3()
comment20.text=\r\n\ Test\ co-modification\:\ add\ after\ add.\r\n
comment21.params=
comment21.target=void\ testForCoMods4()
comment21.text=\r\n\ Test\ co-modification\:\ remove\ after\ remove.\r\n
comment3.params=generator
comment3.target=List\ getList(edu.franklin.misc.DataGenerator)
comment3.text=\r\n\ This\ method\ should\ be\ overridden\ in\ derived\ classes\ such\ that\ it\r\n\ will\ return\ a\ concrete\ implementation\ of\ List\ based\ on\ the\r\n\ data\ provided\ in\ the\ generator.\r\n\ @param\ <E>\ the\ type\ of\ data\ held\ in\ the\ collection\r\n\ @param\ generator\ the\ generator\ which\ produces\ the\ data\r\n\ @return\ a\ concrete\ list\ of\ the\ right\ type\ containing\r\n\ the\ data\ from\ the\ generator\r\n
comment4.params=generator
comment4.target=Collection\ getCollection(edu.franklin.misc.DataGenerator)
comment4.text=\r\n\ Creates\ an\ ArrayList\ containing\ data\ from\ the\ specified\r\n\ generator.\r\n\ @param\ <E>\ the\ type\ of\ data\ to\ generate\r\n\ @param\ generator\ the\ object\ which\ will\ provide\ the\ data\r\n\ @return\ an\ ArrayList\ containing\ the\ data\r\n
comment5.params=
comment5.target=void\ testIndexOf()
comment5.text=\r\n\ Test\ the\ indexOf\ method\ (searching).\r\n
comment6.params=
comment6.target=void\ testIteratorAddAtPosition()
comment6.text=\r\n\ Test\ adding\ elements\ at\ a\ specified\ index.\r\n
comment7.params=
comment7.target=void\ testIteratorNextIndex()
comment7.text=\r\n\ Test\ the\ list\ iterator\ nextIndex\ method.\r\n
comment8.params=
comment8.target=void\ testIteratorPreviousIndex()
comment8.text=\r\n\ Test\ the\ list\ iterator\ previousIndex\ method.\r\n
comment9.params=
comment9.target=void\ testIteratorSet()
comment9.text=\r\n\ Test\ the\ iterator\ set\ method\ while\ iterating\ forward.\r\n
numComments=22
