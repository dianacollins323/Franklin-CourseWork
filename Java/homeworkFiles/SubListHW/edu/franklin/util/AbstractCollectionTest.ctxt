#BlueJ class context
comment0.params=generator
comment0.target=Collection\ getCollection(edu.franklin.misc.DataGenerator)
comment0.text=\r\n\ This\ method\ should\ be\ overridden\ in\ derived\ classes\ such\ that\ it\r\n\ will\ return\ a\ concrete\ implementation\ of\ Collection\ based\ on\ the\r\n\ data\ provided\ in\ the\ generator.\r\n\ @param\ <E>\ the\ type\ of\ data\ held\ in\ the\ collection\r\n\ @param\ generator\ the\ generator\ which\ produces\ the\ data\r\n\ @return\ a\ concrete\ collection\ of\ the\ right\ type\ containing\r\n\ the\ data\ from\ the\ generator\r\n
comment1.params=
comment1.target=AbstractCollectionTest()
comment1.text=\r\n\ Default\ constructor\ for\ test\ class\ CollectionsTests.\r\n
comment10.params=
comment10.target=void\ testIteratorRemoveComplex()
comment10.text=\r\n\ Tests\ removing\ every\ other\ element\ from\ the\ collection\ using\ the\r\n\ iterator.\r\n
comment11.params=
comment11.target=void\ testIteratorRemovingEverything()
comment11.text=\r\n\ Tests\ removing\ everything\ from\ the\ collection\ using\ the\ iterator.\r\n
comment12.params=
comment12.target=void\ testIteratorRemoveWithoutNext()
comment12.text=\r\n\ Tests\ calling\ the\ remove\ method\ of\ the\ iterator\ without\ a\ prior\r\n\ call\ to\ the\ next\ method.\r\n
comment13.params=
comment13.target=void\ testContains()
comment13.text=\r\n\ Tests\ the\ contains\ method.\r\n
comment14.params=
comment14.target=void\ testContainsAll()
comment14.text=\r\n\ Tests\ the\ containsAll\ method.\r\n
comment15.params=
comment15.target=void\ testAddAll()
comment15.text=\r\n\ Tests\ the\ addAll\ method.\r\n
comment16.params=
comment16.target=void\ testIsEmpty()
comment16.text=\r\n\ Tests\ the\ isEmpty\ method.\r\n
comment17.params=
comment17.target=void\ testRemove()
comment17.text=\r\n\ Tests\ the\ remove\ method.\r\n
comment18.params=
comment18.target=void\ testRemoveAll()
comment18.text=\r\n\ Tests\ the\ removeAll\ method.\r\n
comment19.params=
comment19.target=void\ testRetainAll()
comment19.text=\r\n\ Tests\ the\ retainAll\ method.\r\n
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ testClear()
comment20.text=\r\n\ Tests\ the\ clear\ method.\r\n
comment21.params=
comment21.target=void\ testToStringEasy()
comment21.text=\r\n\ Tests\ toString\ on\ a\ simple\ linear\ collection.\r\n
comment22.params=
comment22.target=void\ testToStringMedium()
comment22.text=\r\n\ Tests\ toString\ on\ a\ collection\ that\ contains\ another\ collection.\r\n
comment23.params=
comment23.target=void\ testToStringHard()
comment23.text=\r\n\ Tests\ toString\ on\ two\ collections,\ each\ of\ which\ contain\ each\ other\r\n\ multiple\ times.\r\n
comment24.params=
comment24.target=void\ testHashCodeEasy()
comment24.text=\r\n\ Tests\ hashCode\ on\ a\ simple\ linear\ collection.\r\n
comment25.params=
comment25.target=void\ testHashCodeMedium()
comment25.text=\r\n\ Tests\ hashCode\ on\ a\ collection\ that\ contains\ another\ collection.\r\n
comment26.params=
comment26.target=void\ testHashCodeHard()
comment26.text=\r\n\ Tests\ hashCode\ on\ two\ collections,\ each\ of\ which\ contain\ each\ other\r\n\ multiple\ times.\r\n
comment27.params=
comment27.target=void\ testEqualsEasy()
comment27.text=\r\n\ Tests\ equals\ on\ a\ simple\ linear\ collection.\r\n
comment28.params=
comment28.target=void\ testEqualsMedium()
comment28.text=\r\n\ Tests\ equals\ on\ a\ collection\ that\ contains\ another\ collection.\r\n
comment29.params=
comment29.target=void\ testEqualsHard()
comment29.text=\r\n\ Tests\ equals\ on\ two\ collections,\ each\ of\ which\ contain\ each\ other\r\n\ multiple\ times.\r\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment30.params=
comment30.target=void\ testToArray()
comment30.text=\r\n\ Tests\ the\ toArray\ method.\r\n
comment31.params=
comment31.target=void\ testToArrayT1()
comment31.text=\r\n\ Tests\ the\ toArray\ method\ where\ the\ parameter\ is\ large\ enough.\r\n
comment32.params=
comment32.target=void\ testToArrayT2()
comment32.text=\r\n\ Tests\ the\ toArray\ method\ where\ the\ parameter\ is\ not\ large\ enough.\r\n
comment4.params=arr
comment4.target=Collection\ getCollection(java.lang.Object[])
comment4.text=\r\n\ A\ convenience\ method\ that\ will\ build\ a\ collection\ from\ the\r\n\ data\ given\ in\ an\ array.\r\n\ @param\ <E>\ the\ type\ of\ data\ held\ in\ the\ collection\r\n\ @param\ arr\ the\ array\ from\ which\ to\ build\ the\ collection\r\n\ @return\ a\ collection\ holding\ the\ data\r\n
comment5.params=
comment5.target=void\ testCreating()
comment5.text=\r\n\ Test\ creating\ an\ empty\ collection.\r\n
comment6.params=
comment6.target=void\ testAddingSimple()
comment6.text=\r\n\ Test\ creating\ an\ empty\ collection,\ and\ adding\ a\ few\ elements\ to\ it.\r\n
comment7.params=
comment7.target=void\ testAddingNulls()
comment7.text=\r\n\ Test\ adding\ null\ into\ a\ collection.\r\n
comment8.params=
comment8.target=void\ testIteration()
comment8.text=\r\n\ Test\ iterating\ through\ a\ collection,\ verifying\ data.\ \ Going\ beyond\r\n\ the\ end\ of\ the\ collection\ should\ trigger\ a\ NoSuchElementException.\r\n
comment9.params=
comment9.target=void\ testIteratorRemoveSimple()
comment9.text=\r\n\ Tests\ removing\ the\ first\ element\ from\ a\ collection\ using\ the\ iterator.\r\n
numComments=33
